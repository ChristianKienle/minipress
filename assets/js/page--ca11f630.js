(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{138:function(t,a,s){"use strict";s.r(a);var e=s(0),n=function(t){var a=t.options.beforeCreate||[];t.options.beforeCreate=[function(){var t={file:{relative:"internals.md"},content:"",contentType:"md",headings:[{text:"Internals",slug:"internals",level:1},{text:"How Pages come to Life",slug:"how-pages-come-to-life",level:2},{text:"Learnings",slug:"learnings",level:2},{text:"Plugin/Theme-API",slug:"plugintheme-api",level:3},{text:"asyncData",slug:"asyncdata",level:2}],regularPath:"/internals.html",key:"ca11f630",frontmatter:{},attributes:{},layout:void 0,path:"/internals"};this.$page=t}].concat(a)},r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("MiniLayout",{attrs:{name:"default"}},[s("div",{staticClass:"page-content"},[s("h1",{attrs:{id:"internals"}},[s("router-link",{staticClass:"header-anchor",attrs:{to:"#internals","aria-hidden":"true"}},[t._v("#")]),t._v(" Internals")],1),t._v(" "),s("p",[t._v("If you want to know how "),s("em",[t._v("miniPress")]),t._v(" works internally – this guide is for you.")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("A word of caution:")]),t._v("\nThe internals change very frequently as I learn new things. Also – my understanding might be incorrect.")])]),t._v(" "),s("h2",{attrs:{id:"how-pages-come-to-life"}},[s("router-link",{staticClass:"header-anchor",attrs:{to:"#how-pages-come-to-life","aria-hidden":"true"}},[t._v("#")]),t._v(" How Pages come to Life")],1),t._v(" "),s("p",[t._v("Let’s assume that there is a directory called "),s("code",[t._v("pages/")]),t._v(", which contains all of your Markdown files. Each file represents a page. When "),s("em",[t._v("miniPress")]),t._v(" is started, it looks in that directory and finds all Markdown files. It makes a note of each file and basically just renders the Markdown file using it’s custom Markdown setup. So basically this is what happens ("),s("em",[t._v("pseudocode")]),t._v("):")]),t._v(" "),s("div",{pre:!0,attrs:{class:"minipress-highlight","data-lang":"js"}},[s("pre",{pre:!0,attrs:{class:"minipress-highlight-code language-js"}},[s("code",{pre:!0,attrs:{class:"language-js"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" paths "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findPagesIn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pages/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\npaths"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Page")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])])]),s("p",[t._v("The Markdown pipeline is setup in a "),s("strong",[t._v("special way")]),t._v(":")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("render()")]),t._v(" does some preprocessing (extract frontmatter, …) and the renders the page by basically invoking each Markdown(-it)-plugin.")]),t._v(" "),s("li",[t._v("Each Markdown plugin knows which "),s("code",[t._v("Page")]),t._v("-instance it operates on.")]),t._v(" "),s("li",[t._v("Each Markdown plugin does it’s job and then simply sets properties on the page instance as needed.")]),t._v(" "),s("li",[t._v("For example – the headings plugin sets the "),s("code",[t._v("headings")]),t._v("-property on the page instance.")])]),t._v(" "),s("p",[t._v("After the "),s("em",[t._v("initial")]),t._v(" render process the "),s("code",[t._v("Page")]),t._v("-instances are pre-populated with all the data we need.")]),t._v(" "),s("h2",{attrs:{id:"learnings"}},[s("router-link",{staticClass:"header-anchor",attrs:{to:"#learnings","aria-hidden":"true"}},[t._v("#")]),t._v(" Learnings")],1),t._v(" "),s("h3",{attrs:{id:"plugintheme-api"}},[s("router-link",{staticClass:"header-anchor",attrs:{to:"#plugintheme-api","aria-hidden":"true"}},[t._v("#")]),t._v(" Plugin/Theme-API")],1),t._v(" "),s("p",[t._v("Originally I wanted to have a plugin-/theme-API like plugins in Rollup are done:")]),t._v(" "),s("p",[s("strong",[t._v("Custom Theme:")])]),t._v(" "),s("div",{pre:!0,attrs:{class:"minipress-highlight","data-lang":"js"}},[s("pre",{pre:!0,attrs:{class:"minipress-highlight-code language-js"}},[s("code",{pre:!0,attrs:{class:"language-js"}},[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* my theme implementation goes here */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),s("p",[s("strong",[t._v("Theme Consumer:")])]),t._v(" "),s("div",{pre:!0,attrs:{class:"minipress-highlight","data-lang":"js"}},[s("pre",{pre:!0,attrs:{class:"minipress-highlight-code language-js"}},[s("code",{pre:!0,attrs:{class:"language-js"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" CustomTheme "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my-custom-theme'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  theme"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CustomTheme\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),s("p",[t._v("However, this has one big disadvantage: "),s("em",[t._v("miniPress")]),t._v(" no longer knows the location of "),s("code",[t._v("CustomTheme")]),t._v(" in the file system. This means that it cannot apply certain conventions for example automatically registering components found in "),s("code",[t._v("components/")]),t._v(". Probably that is why "),s("em",[t._v("VuePress")]),t._v(" requires you to specify plugins by name. It is also possible to pass "),s("em",[t._v("VuePress")]),t._v(" a function as a plugin but I have no idea how they do it.")]),t._v(" "),s("h2",{attrs:{id:"asyncdata"}},[s("router-link",{staticClass:"header-anchor",attrs:{to:"#asyncdata","aria-hidden":"true"}},[t._v("#")]),t._v(" asyncData")],1),t._v(" "),s("p",[t._v("Two things:")]),t._v(" "),s("ol",[s("li",[t._v("First, I will describe how nuxt supports "),s("code",[t._v("asyncData")]),t._v(" and then")]),t._v(" "),s("li",[t._v("I will describe how it works in miniPress")])]),t._v(" "),s("p",[t._v("Let’s assume you have a page that looks like this:")]),t._v(" "),s("div",{pre:!0,attrs:{class:"minipress-highlight","data-lang":"markup"}},[s("pre",{pre:!0,attrs:{class:"minipress-highlight-code language-markup"}},[s("code",{pre:!0,attrs:{class:"language-markup"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{firstname}} – {{lastname}}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" fetchLastName "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./fetch-last-name'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("firstName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("asyncData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// < returns a promise that resolves to:")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { lastName: 'Borg' } (or some other last name)")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchLastName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])])])]),s("p",[t._v("Now the user navigates to this page. Then "),s("code",[t._v("asyncData")]),t._v(" is called on the server side and not again on the client. "),s("code",[t._v("asyncData")]),t._v(" is called on the client for every page visited after the first one. The intention is probably to have a fast first page load and then the client takes over the control of "),s("code",[t._v("asyncData")]),t._v(" for all subsequent site naviations.")]),t._v(" "),s("p",[t._v("Note: Executing "),s("code",[t._v("nuxt generate")]),t._v(" causes "),s("code",[t._v("asyncData")]),t._v(" to be executed for each page (that does not have a dynamic route). Each "),s("code",[t._v("asyncData")]),t._v(" is made part of the corresponding page bundle. But this bundled "),s("code",[t._v("asyncData")]),t._v(" is only used for the initial page load (even for statically built sites). This may be what I want – or it may not be what I want. Where it breaks down is in cases where "),s("code",[t._v("asyncData")]),t._v(" truly returns “static” data.")]),t._v(" "),s("p",[t._v("This is how "),s("code",[t._v("asyncData")]),t._v(" looks in miniPress:")]),t._v(" "),s("div",{pre:!0,attrs:{class:"minipress-highlight","data-lang":"markup"}},[s("pre",{pre:!0,attrs:{class:"minipress-highlight-code language-markup"}},[s("code",{pre:!0,attrs:{class:"language-markup"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{firstname}} – {{lastname}}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" fetchLastName "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./fetch-last-name'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("firstName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("asyncData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("asyncDataSSR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("asyncDataSSR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" asyncDataSSR\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchLastName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])])])]),s("p",[s("em",[t._v("miniPress")]),t._v(" calls "),s("code",[t._v("asyncData")]),t._v(" twice. ALWAYS. Once on the server and the again on the client. The "),s("code",[t._v("asyncDataSSR")]),t._v(" argument contains a copy of what has been generated during SSR. This can be "),s("code",[t._v("{}")]),t._v(" in case "),s("code",[t._v("asyncData")]),t._v(" is currently executed on the server. In other cases it is just whatever "),s("code",[t._v("asyncData")]),t._v(" returned during SSR. This allows you to check the contents of "),s("code",[t._v("asyncDataSSR")]),t._v(". In the case above I check whether or not it contains a "),s("code",[t._v("lastName")]),t._v(". If it does "),s("code",[t._v("asyncDataSSR")]),t._v(" is good enough for my use case and I simply return "),s("code",[t._v("asyncDataSSR")]),t._v(". If it does not contain "),s("code",[t._v("lastName")]),t._v(" I am fetching the last name from the backend.")]),t._v(" "),s("ul",[s("li",[t._v("During Development miniPress initially sets "),s("code",[t._v("asyncDataSSR")]),t._v(" to "),s("code",[t._v("{}")]),t._v(" (when not disabled with "),s("code",[t._v("--keep-cache")]),t._v(") for every page. "),s("code",[t._v("asyncData")]),t._v(" is called lazily – once you visit the corresponding page.")]),t._v(" "),s("li",[t._v("When building a static version of the site "),s("code",[t._v("asyncData")]),t._v(" is invoked for each page and also bundled with each page so that subsequent invokations come with the "),s("code",[t._v("asyncDataSSR")]),t._v(" argument.")])])])])}),[],!1,null,null,null);"function"==typeof n&&n(r);a.default=r.exports}}]);